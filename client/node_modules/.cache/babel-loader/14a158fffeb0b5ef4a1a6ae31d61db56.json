{"ast":null,"code":"var _jsxFileName = \"/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Formik, useField, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router\";\nimport { Badge, Button, Col, Container, Form, FormControl, Row, Stack } from \"react-bootstrap\";\nimport '../question.css';\nimport { string } from \"yup\";\nimport { forEach } from \"react-bootstrap/ElementChildren\";\nimport { nanoid } from 'nanoid';\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questionnaire() {\n  _s();\n\n  // const navigate = useNavigate();\n  const [entryTime, setEntryTime] = React.useState(Date.now());\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    time: 0,\n    ip: \"\",\n    qMap: new Map()\n  });\n  const formik = useFormik({\n    initialValues: {\n      // q1:false,\n      // q2:false,\n      question0: {\n        name: ' ',\n        ans: ' '\n      },\n      question1: {\n        name: ' ',\n        ans: ' '\n      },\n      question2: {\n        name: ' ',\n        ans: ' '\n      },\n      question3: {\n        name: ' ',\n        ans: ' '\n      },\n      question4: {\n        name: ' ',\n        ans: ' '\n      },\n      question5: {\n        name: ' ',\n        ans: ' '\n      },\n      question6: {\n        name: ' ',\n        ans: ' '\n      },\n      question7: {\n        name: ' ',\n        ans: ' '\n      },\n      question8: {\n        name: ' ',\n        ans: ' '\n      },\n      question9: {\n        name: ' ',\n        ans: ' '\n      } // sq0:'',\n      // sq1:'',\n      // sq2:'',\n      // sq3:'',\n      // sq4:'',\n      // sq5:'',\n      // sq6:'',\n      // sq7:'',\n      // sq8:'',\n      // sq9:'',\n      // firstName: '',\n      // lastName: '',\n      // email: '',\n\n    },\n    validationSchema: Yup.object({\n      // q1: Yup.bool()\n      //     .required(\"1Choose one\")\n      //     .oneOf([true], 'Field 1 must be checked'),\n      //\n      // q2: Yup.bool()\n      //     .required(\"2Choose one\")\n      //     .oneOf([true], 'Field 2 must be checked'),\n      question0: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3, \"Q1sss\").required(\"Q1 unchecked\")\n      }).required(\"Q1xxx\"),\n      question1: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q2 unchecked\")\n      }),\n      question2: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q3 unchecked\")\n      }),\n      question3: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q4 unchecked\")\n      }),\n      question4: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q5 unchecked\")\n      }),\n      question5: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q6 unchecked\")\n      }),\n      question6: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q7 unchecked\")\n      }),\n      question7: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q8 unchecked\")\n      }),\n      question8: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q9 unchecked\")\n      }),\n      question9: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q10 unchecked\")\n      }) // question1: Yup.object().shape({\n      //     ans: string().required(\"Q2 unchecked\"),\n      // })\n      // sq0: Yup.string()\n      //     .required(\"Q1 unchecked\"),\n      //\n      // sq1: Yup.string()\n      //     .required(\"Q2 unchecked\"),\n      //\n      // sq2: Yup.string()\n      //     .required(\"Q3 unchecked\"),\n      //\n      // sq3: Yup.string()\n      //     .required(\"Q4 unchecked\"),\n      //\n      // sq4: Yup.string()\n      //     .required(\"Q5 unchecked\"),\n      //\n      // sq5: Yup.string()\n      //     .required(\"Q6 unchecked\"),\n      // sq6: Yup.string()\n      //     .required(\"Q7 unchecked\"),\n      // sq7: Yup.string()\n      //     .required(\"Q8 unchecked\"),\n      // sq8: Yup.string()\n      //     .required(\"Q9 unchecked\"),\n      // sq9: Yup.string()\n      //     .required(\"Q10 unchecked\"),\n      // firstName: Yup.string()\n      //     .max(15, 'Must be 15 characters or less')\n      //     .required('Required'),\n      // lastName: Yup.string()\n      //     .max(20, 'Must be 20 characters or less')\n      //     .required('Required'),\n      // email: Yup.string().email('Invalid email address').required('Required'),\n\n    }),\n    onSubmit: async values => {\n      let endTime = Date.now();\n      console.log(\"end time!!!\" + endTime);\n      console.log(\"entry time!!!\" + entryTime);\n      let millis = Date.now() - entryTime;\n      console.log(\"total time!!!\" + millis); // const newAnswer = {...form};\n\n      let temMap = new Map();\n\n      for (let i = 0; i < 10; i++) {\n        temMap.set(values[\"question\" + i].name, values[\"question\" + i].ans);\n        console.log(temMap.get(values[\"question\" + i].name));\n        formik.touched[\"question\" + i] = false;\n      }\n\n      temMap.set(\"id\", nanoid(11));\n      temMap.set(\"time\", millis / 1000);\n      setForm({\n        time: millis,\n        ip: \"8.8.8.8\",\n        qMap: temMap\n      });\n      Object.keys(formik.initialValues).forEach(function (key) {\n        formik.initialValues[key].ans = \" \";\n        formik.initialValues[key].name = \" \";\n      });\n      await fetch(\"http://localhost:5001/question/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(Object.fromEntries(temMap))\n      }).catch(error => {\n        window.alert(error);\n        return;\n      }); // console.log(\"form: \"+form.toString())\n\n      alert(\"Thank you, we have received your answer!\");\n      alert(JSON.stringify(Object.fromEntries(temMap), null, 2)); //\n      // alert(JSON.stringify(form, null, 2));//得不到\n      // [formik.initialValues].forEach(item =>{\n      //     item.name = ' '\n      //     item.ans = ' '\n      // })\n      // formik.initialValues.question0.name=' ';\n      // formik.initialValues.question0.ans=' ';\n      // formik.initialValues.question1.name=' ';\n      // formik.initialValues.question1.ans=' ';\n      // formik.initialValues.question2.name=' ';\n      // formik.initialValues.question2.ans=' ';\n      // formik.initialValues.question3.name=' ';\n      // formik.initialValues.question3.ans=' ';\n      // formik.initialValues.question9.name=' ';\n      // formik.initialValues.question9.ans=' ';\n      // formik.initialValues.sq0 = '';\n      // formik.initialValues.sq1 = '';\n      // formik.initialValues.sq2 = '';\n      // formik.initialValues.sq3 = '';\n      // formik.initialValues.sq4 = '';\n      // formik.initialValues.sq5 = '';\n      // formik.initialValues.sq6 = '';\n      // formik.initialValues.sq7 = '';\n      // formik.initialValues.sq8 = '';\n      // formik.initialValues.sq9 = '';\n\n      setFuns.forEach(func => {\n        func('');\n      });\n    }\n  }); // let [selectedID, setID] = React.useState({\n  //     p1:\"\",\n  //     p2:\"\",\n  //     p3:\"\",\n  //     p4:\"\",\n  //     p5:\"\",\n  // });\n\n  let [selectedID0, setID0] = React.useState(\"\");\n  let [selectedID1, setID1] = React.useState(\"\");\n  let [selectedID2, setID2] = React.useState(\"\");\n  let [selectedID3, setID3] = React.useState(\"\");\n  let [selectedID4, setID4] = React.useState(\"\");\n  let [selectedID5, setID5] = React.useState(\"\");\n  let [selectedID6, setID6] = React.useState(\"\");\n  let [selectedID7, setID7] = React.useState(\"\");\n  let [selectedID8, setID8] = React.useState(\"\");\n  let [selectedID9, setID9] = React.useState(\"\");\n  let setFuns = [setID0, setID1, setID2, setID3, setID4, setID5, setID6, setID7, setID8, setID9];\n  let selectedIDs = [selectedID0, selectedID1, selectedID2, selectedID3, selectedID4, selectedID5, selectedID6, selectedID7, selectedID8, selectedID9];\n\n  function Question(props) {\n    // let anss = formik.values[[\"question\"+props.qId]].ans;\n    // console.log(\"anss!!:\"+anss+\", index, \"+props.qId+\", length:\"+formik.values[[\"question\"+props.qId]].ans.length)\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"qTitle\",\n        children: [\"Q\", props.qId + 1, \": \", props.descri, formik.values[\"question\" + props.qId].ans < 3 && formik.touched[\"question\" + props.qId] ? /*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          bg: \"danger\",\n          children: [\"Q\", props.qId + 1, \" unchecked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this) : \"ok\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"qCard\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          sm: 4,\n          md: 4,\n          children: ['Strongly Agree', 'Slightly Agree', 'Agree', 'Neutral', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              id: `${ques}+${props.qId}`,\n              name: `${ques}+${props.qId}` // label={`${ques}+${props.qId === 1? selectedID1:selectedID2}`}\n              // label={`${ques}+${props.selectAns}`}\n              // checked={ques+props.qId === props.selectAns}\n              // checked={ques+props.qId === (props.qId === 1? selectedID1:selectedID2)}\n              ,\n              label: `${ques}` //+${props.selectId}\n              ,\n              checked: ques + props.qId === props.selectId,\n              onChange: () => {\n                // formik.values[\"sq\"+props.qId]= ques;\n                formik.values[\"question\" + props.qId].name = props.qName; //+props.qId\n\n                formik.values[\"question\" + props.qId].ans = ques;\n                setFuns[props.qId](ques + props.qId); // switch (props.qId){\n                //     case 1:\n                //         console.log(\"case1\")\n                //         setID1(ques+props.qId)\n                //         break\n                //     case 2:\n                //         console.log(\"case2\")\n                //         setID2(ques+props.qId)\n                //         break\n                //     case 3:\n                //         console.log(\"case3\")\n                //         setID3(ques+props.qId)\n                //         break\n                // }\n                // if (props.qId===1){\n                //     setID1(ques+props.qId)\n                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID1:\"+selectedID1)\n                //\n                // }else{\n                //     setID2(ques+props.qId)\n                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID2:\"+selectedID2)\n                // }\n                // setID(ques+props.qId)\n                // console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID:\"+selectedID)\n              } // onChange={formik.handleChange}\n              // onBlur={formik.handleBlur}\n              // value={formik.values[\"q\"+props.qId]}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this)\n          }, `${ques}+${props.qId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this);\n  }\n\n  const [questions, setQuestions] = useState([]);\n  let firstLoad = true; // This method fetches the records from the database.\n\n  useEffect(() => {\n    if (!firstLoad) {\n      return;\n    }\n\n    setEntryTime(Date.now());\n    console.log(\"entryTime:\" + entryTime); // currentTime = Date.now();\n    // console.log(\"time!!!\"+currentTime)\n\n    firstLoad = false;\n\n    async function getQuestions() {\n      const response = await fetch(`http://localhost:5001/questionlist/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      shuffleArray(records);\n      setQuestions(records.slice(0, 10));\n    }\n\n    getQuestions();\n    return;\n  }, [questions.length]);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  }\n\n  function exportCsv() {\n    // navigate(\"http://localhost:5001/csv\")\n    async function getCsv() {\n      const response = await fetch(`http://localhost:5001/csv/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n    }\n\n    getCsv();\n  }\n\n  function questionList() {\n    return questions.map((question, index) => {\n      // console.log(\"question!!!: \" + question.questiontext)\n      // console.log(\"index!!!: \" + index)\n      return /*#__PURE__*/_jsxDEV(Question, {\n        descri: question.questiontext,\n        qId: index,\n        qName: question.varname,\n        selectId: selectedIDs[index++] // deleteRecord={() => deleteRecord(record._id)}\n        // key={record._id}\n\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this);\n    });\n  } // let\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"col-sm-12 col-md-12 mx-2\",\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 2,\n        className: \"mx-auto\",\n        children: [questionList(), /*#__PURE__*/_jsxDEV(Container, {\n          children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(index => {\n            return formik.values[\"question\" + index].ans < 3 && formik.touched[\"question\" + index] ? /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              className: \"col mx-1 \",\n              pill: true,\n              bg: \"danger\",\n              children: [\"Q\", index, \" unchecked\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 29\n            }, this) : null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"col-4 mx-auto my-4 \",\n          variant: \"secondary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"col-4 mx-auto my-4 \",\n      variant: \"secondary\",\n      onSubmit: exportCsv,\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:5001/csv/\",\n      download: \"answerss.csv\",\n      children: \"Download this image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 438,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questionnaire, \"qunPWPBb5X+fPFpR/n67kwCLlyM=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Questionnaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js"],"names":["React","useEffect","useState","Formik","useField","useFormik","Yup","useNavigate","Badge","Button","Col","Container","Form","FormControl","Row","Stack","string","forEach","nanoid","NavLink","Questionnaire","entryTime","setEntryTime","Date","now","navigate","form","setForm","time","ip","qMap","Map","formik","initialValues","question0","name","ans","question1","question2","question3","question4","question5","question6","question7","question8","question9","validationSchema","object","required","min","onSubmit","values","endTime","console","log","millis","temMap","i","set","get","touched","Object","keys","key","fetch","method","headers","body","JSON","stringify","fromEntries","catch","error","window","alert","setFuns","func","selectedID0","setID0","selectedID1","setID1","selectedID2","setID2","selectedID3","setID3","selectedID4","setID4","selectedID5","setID5","selectedID6","setID6","selectedID7","setID7","selectedID8","setID8","selectedID9","setID9","selectedIDs","Question","props","qId","descri","map","ques","selectId","qName","questions","setQuestions","firstLoad","getQuestions","response","ok","message","statusText","records","json","shuffleArray","slice","length","array","j","Math","floor","random","temp","exportCsv","getCsv","questionList","question","index","questiontext","varname","_id","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Formik, useField, useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useNavigate} from \"react-router\";\nimport {Badge, Button, Col, Container, Form, FormControl, Row, Stack} from \"react-bootstrap\";\nimport '../question.css';\nimport {string} from \"yup\";\nimport {forEach} from \"react-bootstrap/ElementChildren\";\nimport { nanoid } from 'nanoid'\nimport {NavLink} from \"react-router-dom\";\n\nexport default function Questionnaire() {\n    // const navigate = useNavigate();\n    const [entryTime, setEntryTime] = React.useState(Date.now());\n    const navigate = useNavigate();\n    const [form, setForm] = useState({\n        time: 0,\n        ip: \"\",\n        qMap:new Map,\n    });\n\n\n    const formik = useFormik({\n        initialValues: {\n            // q1:false,\n            // q2:false,\n            question0:{\n                name:' ',\n                ans:' '\n            },\n            question1:{\n                name:' ',\n                ans:' '\n            },\n            question2:{\n                name:' ',\n                ans:' '\n            },\n            question3:{\n                name:' ',\n                ans:' '\n            },\n            question4:{\n                name:' ',\n                ans:' '\n            },\n            question5:{\n                name:' ',\n                ans:' '\n            },\n            question6:{\n                name:' ',\n                ans:' '\n            },\n            question7:{\n                name:' ',\n                ans:' '\n            },\n            question8:{\n                name:' ',\n                ans:' '\n            },\n            question9:{\n                name:' ',\n                ans:' '\n            },\n\n            // sq0:'',\n            // sq1:'',\n            // sq2:'',\n            // sq3:'',\n            // sq4:'',\n            // sq5:'',\n            // sq6:'',\n            // sq7:'',\n            // sq8:'',\n            // sq9:'',\n            // firstName: '',\n            // lastName: '',\n            // email: '',\n        },\n        validationSchema: Yup.object({\n            // q1: Yup.bool()\n            //     .required(\"1Choose one\")\n            //     .oneOf([true], 'Field 1 must be checked'),\n            //\n            // q2: Yup.bool()\n            //     .required(\"2Choose one\")\n            //     .oneOf([true], 'Field 2 must be checked'),\n\n            question0: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3,\"Q1sss\").required(\"Q1 unchecked\"),\n            }).required(\"Q1xxx\"),\n\n            question1: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q2 unchecked\"),\n            }),\n            question2: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q3 unchecked\"),\n            }),\n            question3: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q4 unchecked\"),\n            }),\n            question4: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q5 unchecked\"),\n            }),\n            question5: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q6 unchecked\"),\n            }),\n            question6: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q7 unchecked\"),\n            }),\n            question7: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q8 unchecked\"),\n            }),\n            question8: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q9 unchecked\"),\n            }),\n            question9: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q10 unchecked\"),\n            }),\n\n            // question1: Yup.object().shape({\n            //     ans: string().required(\"Q2 unchecked\"),\n            // })\n\n            // sq0: Yup.string()\n            //     .required(\"Q1 unchecked\"),\n            //\n            // sq1: Yup.string()\n            //     .required(\"Q2 unchecked\"),\n            //\n            // sq2: Yup.string()\n            //     .required(\"Q3 unchecked\"),\n            //\n            // sq3: Yup.string()\n            //     .required(\"Q4 unchecked\"),\n            //\n            // sq4: Yup.string()\n            //     .required(\"Q5 unchecked\"),\n            //\n            // sq5: Yup.string()\n            //     .required(\"Q6 unchecked\"),\n            // sq6: Yup.string()\n            //     .required(\"Q7 unchecked\"),\n            // sq7: Yup.string()\n            //     .required(\"Q8 unchecked\"),\n            // sq8: Yup.string()\n            //     .required(\"Q9 unchecked\"),\n            // sq9: Yup.string()\n            //     .required(\"Q10 unchecked\"),\n\n            // firstName: Yup.string()\n            //     .max(15, 'Must be 15 characters or less')\n            //     .required('Required'),\n            // lastName: Yup.string()\n            //     .max(20, 'Must be 20 characters or less')\n            //     .required('Required'),\n            // email: Yup.string().email('Invalid email address').required('Required'),\n\n        }),\n\n        onSubmit: async values => {\n            let endTime = Date.now();\n            console.log(\"end time!!!\" + endTime)\n            console.log(\"entry time!!!\" + entryTime)\n            let millis = Date.now() - entryTime\n            console.log(\"total time!!!\" + millis)\n\n            // const newAnswer = {...form};\n\n            let temMap = new Map(\n                // [\"q1\",values.sq0],\n            )\n            for (let i =0; i<10; i++){\n                temMap.set(values[\"question\"+i].name,values[\"question\"+i].ans)\n                console.log(temMap.get(values[\"question\"+i].name))\n                formik.touched[\"question\"+i]= false;\n            }\n            temMap.set(\"id\",nanoid(11))\n            temMap.set(\"time\",millis/1000)\n\n            setForm({time:millis,ip:\"8.8.8.8\", qMap:temMap});\n\n\n            Object.keys(formik.initialValues).forEach(\n                function(key){\n                    formik.initialValues[key].ans = \" \"\n                    formik.initialValues[key].name = \" \"\n                }\n            );\n\n            await fetch(\"http://localhost:5001/question/add\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(Object.fromEntries(temMap)),\n            })\n                .catch(error => {\n                    window.alert(error);\n                    return;\n                });\n\n\n            // console.log(\"form: \"+form.toString())\n            alert(\"Thank you, we have received your answer!\")\n            alert(JSON.stringify(Object.fromEntries(temMap), null, 2));//\n\n\n            // alert(JSON.stringify(form, null, 2));//得不到\n\n            // [formik.initialValues].forEach(item =>{\n            //     item.name = ' '\n            //     item.ans = ' '\n            // })\n            // formik.initialValues.question0.name=' ';\n            // formik.initialValues.question0.ans=' ';\n            // formik.initialValues.question1.name=' ';\n            // formik.initialValues.question1.ans=' ';\n            // formik.initialValues.question2.name=' ';\n            // formik.initialValues.question2.ans=' ';\n            // formik.initialValues.question3.name=' ';\n            // formik.initialValues.question3.ans=' ';\n            // formik.initialValues.question9.name=' ';\n            // formik.initialValues.question9.ans=' ';\n\n            // formik.initialValues.sq0 = '';\n            // formik.initialValues.sq1 = '';\n            // formik.initialValues.sq2 = '';\n            // formik.initialValues.sq3 = '';\n            // formik.initialValues.sq4 = '';\n            // formik.initialValues.sq5 = '';\n            // formik.initialValues.sq6 = '';\n            // formik.initialValues.sq7 = '';\n            // formik.initialValues.sq8 = '';\n            // formik.initialValues.sq9 = '';\n            setFuns.forEach(func => {\n                func('')\n            })\n        },\n    });\n\n\n    // let [selectedID, setID] = React.useState({\n    //     p1:\"\",\n    //     p2:\"\",\n    //     p3:\"\",\n    //     p4:\"\",\n    //     p5:\"\",\n    // });\n\n    let [selectedID0, setID0] = React.useState(\"\");\n    let [selectedID1, setID1] = React.useState(\"\");\n    let [selectedID2, setID2] = React.useState(\"\");\n    let [selectedID3, setID3] = React.useState(\"\");\n    let [selectedID4, setID4] = React.useState(\"\");\n    let [selectedID5, setID5] = React.useState(\"\");\n    let [selectedID6, setID6] = React.useState(\"\");\n    let [selectedID7, setID7] = React.useState(\"\");\n    let [selectedID8, setID8] = React.useState(\"\");\n    let [selectedID9, setID9] = React.useState(\"\");\n\n    let setFuns = [setID0, setID1, setID2, setID3,setID4,setID5,setID6,setID7,setID8,setID9]\n    let selectedIDs = [selectedID0, selectedID1, selectedID2, selectedID3,selectedID4,selectedID5,selectedID6,selectedID7,selectedID8,selectedID9]\n    function Question(props) {\n        // let anss = formik.values[[\"question\"+props.qId]].ans;\n        // console.log(\"anss!!:\"+anss+\", index, \"+props.qId+\", length:\"+formik.values[[\"question\"+props.qId]].ans.length)\n        return (\n            <Form.Group  controlId=\"formBasicEmail\">\n                <Form.Label className=\"qTitle\" >\n                    Q{props.qId+1}: {props.descri}\n                    { (formik.values[\"question\"+props.qId].ans<3) && formik.touched[\"question\"+props.qId] ? (\n                        <Badge pill bg=\"danger\">\n                            Q{props.qId+1} unchecked\n                            {/*{formik.errors.question0.ans}*/}\n                        </Badge>\n                    ) : \"ok\"}\n                </Form.Label>\n                {/*<div className=\"qWarning\">*/}\n                {/*    {!formik.values[[\"sq\"+props.qId]] ? (*/}\n                {/*        <Badge pill bg=\"danger\">*/}\n                {/*            {formik.errors[[\"sq\"+props.qId]]}*/}\n                {/*        </Badge>*/}\n                {/*    ) : null}*/}\n                {/*</div>*/}\n\n                <Container className=\"qCard\">\n                    <Row  sm={4} md={4}>\n                {['Strongly Agree','Slightly Agree' ,'Agree', 'Neutral', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map((ques) => (\n                    <Col key={`${ques}+${props.qId}`} >\n                        <Form.Check\n                            type=\"radio\"\n                            id={`${ques}+${props.qId}`}\n                            name={`${ques}+${props.qId}`}\n                            // label={`${ques}+${props.qId === 1? selectedID1:selectedID2}`}\n                            // label={`${ques}+${props.selectAns}`}\n                            // checked={ques+props.qId === props.selectAns}\n                            // checked={ques+props.qId === (props.qId === 1? selectedID1:selectedID2)}\n                            label={`${ques}`}//+${props.selectId}\n                            checked={ques+props.qId === props.selectId}\n                            onChange={ () => {\n                                // formik.values[\"sq\"+props.qId]= ques;\n\n                                formik.values[\"question\"+props.qId].name = props.qName//+props.qId\n                                formik.values[\"question\"+props.qId].ans = ques\n\n                                setFuns[props.qId](ques+props.qId);\n                                // switch (props.qId){\n                                //     case 1:\n                                //         console.log(\"case1\")\n                                //         setID1(ques+props.qId)\n                                //         break\n                                //     case 2:\n                                //         console.log(\"case2\")\n                                //         setID2(ques+props.qId)\n                                //         break\n                                //     case 3:\n                                //         console.log(\"case3\")\n                                //         setID3(ques+props.qId)\n                                //         break\n                                // }\n                                // if (props.qId===1){\n                                //     setID1(ques+props.qId)\n                                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID1:\"+selectedID1)\n                                //\n                                // }else{\n                                //     setID2(ques+props.qId)\n                                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID2:\"+selectedID2)\n                                // }\n                                // setID(ques+props.qId)\n                                // console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID:\"+selectedID)\n                            }}\n                            // onChange={formik.handleChange}\n                            // onBlur={formik.handleBlur}\n                            // value={formik.values[\"q\"+props.qId]}\n                        />\n                    </Col>\n                ))}\n                    </Row>\n                </Container>\n\n                {/*{formik.touched[\"q\"+props.qId] && formik.errors[[\"q\"+props.qId]] ? (*/}\n                {/*    // <div>{formik.errors[[\"q\"+props.qId]]}</div>*/}\n                {/*{!formik.values[[\"sq\"+props.qId]] ? (*/}\n                {/*    <Badge pill bg=\"danger\">*/}\n                {/*        {formik.errors[[\"sq\"+props.qId]]}*/}\n                {/*    </Badge>*/}\n                {/*) : null}*/}\n            </Form.Group>\n\n        )\n    }\n\n    const [questions, setQuestions] = useState([]);\n    let firstLoad = true;\n    // This method fetches the records from the database.\n    useEffect(() => {\n        if(!firstLoad){\n            return;\n        }\n        setEntryTime(Date.now())\n        console.log(\"entryTime:\"+entryTime)\n\n        // currentTime = Date.now();\n        // console.log(\"time!!!\"+currentTime)\n        firstLoad = false;\n        async function getQuestions() {\n            const response = await fetch(`http://localhost:5001/questionlist/`);\n            if (!response.ok) {\n                const message = `An error occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n\n            const records = await response.json();\n            shuffleArray(records);\n            setQuestions(records.slice(0,10));\n        }\n        getQuestions();\n\n        return;\n    }, [questions.length]);\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n    function exportCsv(){\n        // navigate(\"http://localhost:5001/csv\")\n        async function getCsv() {\n            const response = await fetch(`http://localhost:5001/csv/`);\n\n            if (!response.ok) {\n                const message = `An error occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n        }\n        getCsv()\n    }\n    function questionList() {\n        return questions.map((question,index) => {\n            // console.log(\"question!!!: \" + question.questiontext)\n            // console.log(\"index!!!: \" + index)\n            return (\n                <Question\n\n                    descri={question.questiontext}\n                    key={question._id}\n                    qId={index}\n                    qName={question.varname}\n                    selectId = {selectedIDs[index++]}\n\n                    // deleteRecord={() => deleteRecord(record._id)}\n                    // key={record._id}\n                />\n            );\n        });\n    }\n    // let\n    return(\n        <div>\n    <Form  className=\"col-sm-12 col-md-12 mx-2\" onSubmit={formik.handleSubmit}>\n        {/*<Question descri={questions.questiontext}  qId={1} selectId = {selectedIDs[0]} />*/}\n        {/*<Question descri={\"q1 des\"}  qId={1} selectId = {selectedIDs[0]}  />*/}\n        {/*<Question descri={\"q2 des\"}  qId={2} selectId = {selectedID2} />*/}\n        {/*<Question descri={\"q3 des\"}  qId={3} selectId = {selectedID3} />*/}\n\n        <Stack gap={2} className=\"mx-auto\">\n            {questionList()}\n            {/*<Button variant=\"secondary\">Save changes</Button>*/}\n            {/*<Button variant=\"outline-secondary\">Cancel</Button>*/}\n\n            <Container>\n                {[0,1,2,3,4,5,6,7,8,9].map((index)=>{\n                        return formik.values[\"question\"+index].ans<3&&formik.touched[\"question\"+index] ? (\n                            <Badge key={index} pill className=\"col mx-1 \" pill bg=\"danger\">\n                                Q{index} unchecked\n                            </Badge>\n                        ) : null\n                    }\n                )\n                }\n            </Container>\n\n\n\n            <Button className=\"col-4 mx-auto my-4 \" variant=\"secondary\" type=\"submit\">Submit</Button>\n\n        </Stack>\n\n    </Form>\n\n            <Button className=\"col-4 mx-auto my-4 \" variant=\"secondary\"  onSubmit={exportCsv}>Export</Button>\n\n            <a href=\"http://localhost:5001/csv/\" download=\"answerss.csv\">\n                Download this image\n            </a>\n        </div>\n\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}