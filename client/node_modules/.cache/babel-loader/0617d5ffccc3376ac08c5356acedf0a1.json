{"ast":null,"code":"import _asyncToGenerator from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/regenerator/index.js\";/**\n * The following code will serve as a viewing component for our records.\n * It will fetch all the records in our database through a GET method.\n */import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Record=function Record(props){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:props.record.name}),/*#__PURE__*/_jsx(\"td\",{children:props.record.position}),/*#__PURE__*/_jsx(\"td\",{children:props.record.level}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{className:\"btn btn-link\",to:\"/edit/\".concat(props.record._id),children:\"Edit\"}),\" |\",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-link\",onClick:function onClick(){props.deleteRecord(props.record._id);},children:\"Delete\"})]})]});};export default function RecordList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),records=_useState2[0],setRecords=_useState2[1];// This method fetches the records from the database.\nuseEffect(function(){function getRecords(){return _getRecords.apply(this,arguments);}function _getRecords(){_getRecords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,message,records;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:5001/record/\");case 2:response=_context.sent;if(response.ok){_context.next=7;break;}message=\"An error occured: \".concat(response.statusText);window.alert(message);return _context.abrupt(\"return\");case 7:_context.next=9;return response.json();case 9:records=_context.sent;setRecords(records);case 11:case\"end\":return _context.stop();}}},_callee);}));return _getRecords.apply(this,arguments);}getRecords();return;},[records.length]);// This method will delete a record\nfunction _deleteRecord2(_x){return _deleteRecord.apply(this,arguments);}// This method will map out the records on the table\nfunction _deleteRecord(){_deleteRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var newRecords;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:5001/\".concat(id),{method:\"DELETE\"});case 2:newRecords=records.filter(function(el){return el._id!==id;});setRecords(newRecords);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _deleteRecord.apply(this,arguments);}function recordList(){return records.map(function(record){return/*#__PURE__*/_jsx(Record,{record:record,deleteRecord:function deleteRecord(){return _deleteRecord2(record._id);}},record._id);});}// This following section will display the table with the records of individuals.\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Record List\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Level\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:recordList()})]})]});}","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/recordList.js"],"names":["React","useEffect","useState","Link","Record","props","record","name","position","level","_id","deleteRecord","RecordList","records","setRecords","getRecords","fetch","response","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","marginTop"],"mappings":"0XAAA;AACA;AACA;AACA,GACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,qBACX,mCACI,oBAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,EADJ,cAEI,oBAAKF,KAAK,CAACC,MAAN,CAAaE,QAAlB,EAFJ,cAGI,oBAAKH,KAAK,CAACC,MAAN,CAAaG,KAAlB,EAHJ,cAII,mCACI,KAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,CAA+B,EAAE,iBAAWJ,KAAK,CAACC,MAAN,CAAaI,GAAxB,CAAjC,kBADJ,mBAEI,eAAQ,SAAS,CAAC,cAAlB,CACQ,OAAO,CAAE,kBAAM,CACXL,KAAK,CAACM,YAAN,CAAmBN,KAAK,CAACC,MAAN,CAAaI,GAAhC,EACH,CAHT,oBAFJ,GAJJ,GADW,EAAf,CAkBA,cAAe,SAASE,CAAAA,UAAT,EAAsB,CACjC,cAA8BV,QAAQ,CAAC,EAAD,CAAtC,wCAAOW,OAAP,eAAgBC,UAAhB,eAEA;AACAb,SAAS,CAAC,UAAM,SACGc,CAAAA,UADH,wIACZ,sLAC2BC,CAAAA,KAAK,iCADhC,QACUC,QADV,kBAGSA,QAAQ,CAACC,EAHlB,yBAIcC,OAJd,6BAI6CF,QAAQ,CAACG,UAJtD,EAKQC,MAAM,CAACC,KAAP,CAAaH,OAAb,EALR,8DAS0BF,CAAAA,QAAQ,CAACM,IAAT,EAT1B,QASUV,OATV,eAUIC,UAAU,CAACD,OAAD,CAAV,CAVJ,uDADY,6CAcZE,UAAU,GAEV,OACH,CAjBQ,CAiBN,CAACF,OAAO,CAACW,MAAT,CAjBM,CAAT,CAmBA;AAvBiC,QAwBlBb,CAAAA,cAxBkB,iDAiCjC;AAjCiC,+FAwBjC,kBAA4Bc,EAA5B,4JACUT,CAAAA,KAAK,iCAA0BS,EAA1B,EAAgC,CACvCC,MAAM,CAAE,QAD+B,CAAhC,CADf,QAKUC,UALV,CAKuBd,OAAO,CAACe,MAAR,CAAe,SAACC,EAAD,QAAQA,CAAAA,EAAE,CAACnB,GAAH,GAAWe,EAAnB,EAAf,CALvB,CAMIX,UAAU,CAACa,UAAD,CAAV,CANJ,wDAxBiC,+CAkCjC,QAASG,CAAAA,UAAT,EAAsB,CAClB,MAAOjB,CAAAA,OAAO,CAACkB,GAAR,CAAY,SAACzB,MAAD,CAAY,CAC3B,mBACI,KAAC,MAAD,EACI,MAAM,CAAEA,MADZ,CAEI,YAAY,CAAE,8BAAMK,CAAAA,cAAY,CAACL,MAAM,CAACI,GAAR,CAAlB,EAFlB,EAGSJ,MAAM,CAACI,GAHhB,CADJ,CAOH,CARM,CAAP,CASH,CAED;AACA,mBACI,oCACI,mCADJ,cAEI,eAAO,SAAS,CAAC,qBAAjB,CAAuC,KAAK,CAAE,CAAEsB,SAAS,CAAE,EAAb,CAA9C,wBACI,oCACA,mCACI,4BADJ,cAEI,gCAFJ,cAGI,6BAHJ,cAII,8BAJJ,GADA,EADJ,cASI,uBAAQF,UAAU,EAAlB,EATJ,GAFJ,GADJ,CAgBH","sourcesContent":["/**\n * The following code will serve as a viewing component for our records.\n * It will fetch all the records in our database through a GET method.\n */\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n    <tr>\n        <td>{props.record.name}</td>\n        <td>{props.record.position}</td>\n        <td>{props.record.level}</td>\n        <td>\n            <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n            <button className=\"btn btn-link\"\n                    onClick={() => {\n                        props.deleteRecord(props.record._id);\n                    }}\n            >\n                Delete\n            </button>\n        </td>\n    </tr>\n);\n\nexport default function RecordList() {\n    const [records, setRecords] = useState([]);\n\n    // This method fetches the records from the database.\n    useEffect(() => {\n        async function getRecords() {\n            const response = await fetch(`http://localhost:5001/record/`);\n\n            if (!response.ok) {\n                const message = `An error occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n\n            const records = await response.json();\n            setRecords(records);\n        }\n\n        getRecords();\n\n        return;\n    }, [records.length]);\n\n    // This method will delete a record\n    async function deleteRecord(id) {\n        await fetch(`http://localhost:5001/${id}`, {\n            method: \"DELETE\"\n        });\n\n        const newRecords = records.filter((el) => el._id !== id);\n        setRecords(newRecords);\n    }\n\n    // This method will map out the records on the table\n    function recordList() {\n        return records.map((record) => {\n            return (\n                <Record\n                    record={record}\n                    deleteRecord={() => deleteRecord(record._id)}\n                    key={record._id}\n                />\n            );\n        });\n    }\n\n    // This following section will display the table with the records of individuals.\n    return (\n        <div>\n            <h3>Record List</h3>\n            <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Position</th>\n                    <th>Level</th>\n                    <th>Action</th>\n                </tr>\n                </thead>\n                <tbody>{recordList()}</tbody>\n            </table>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}