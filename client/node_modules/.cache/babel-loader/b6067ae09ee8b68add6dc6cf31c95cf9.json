{"ast":null,"code":"var _jsxFileName = \"/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useField, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questionarie() {\n  _s();\n\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      q1: false,\n      q2: false,\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      q1: Yup.bool().required(\"Choose one\").oneOf([true], 'Field must be checked'),\n      // q2: Yup.bool()\n      //     .required(\"Choose one\")\n      //     .oneOf([true], 'Field must be checked'),\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required') // email: Yup.string().email('Invalid email address').required('Required'),\n\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  let [selectedID, setID] = React.useState('');\n\n  function Question() {\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Question 1: Caring for people who have suffered is an important virtue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), ['Strongly Agree', 'Agree', 'netural', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: `${ques}`,\n          name: `${ques}`,\n          label: `${ques}`,\n          checked: ques === selectedID,\n          onChange: () => {\n            formik.values.q1 = true;\n            setID(ques);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, `${ques}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  } // let\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    children: [\"question()\", /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Question 1: Caring for people who have suffered is an important virtue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), ['Strongly Agree', 'Agree', 'netural', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: `${ques}`,\n          name: `${ques}`,\n          label: `${ques}`,\n          checked: ques === selectedID,\n          onChange: () => {\n            formik.values.q1 = true;\n            setID(ques);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, `${ques}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)), formik.touched.q1 && formik.errors.q1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.q1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this) : null, formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questionarie, \"b9oRTaunY0MdZizm43P39PQ3qis=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Questionarie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionarie\");","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js"],"names":["React","useField","useFormik","Yup","useNavigate","Button","Form","Questionarie","navigate","formik","initialValues","q1","q2","firstName","lastName","email","validationSchema","object","bool","required","oneOf","string","max","onSubmit","values","alert","JSON","stringify","selectedID","setID","useState","Question","map","ques","handleSubmit","touched","errors","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useField, useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useNavigate} from \"react-router\";\nimport {Button, Form} from \"react-bootstrap\";\n\nexport default function Questionarie() {\n    const navigate = useNavigate();\n\n\n    const formik = useFormik({\n        initialValues: {\n            q1:false,\n            q2:false,\n            firstName: '',\n            lastName: '',\n            email: '',\n        },\n        validationSchema: Yup.object({\n            q1: Yup.bool()\n                .required(\"Choose one\")\n                .oneOf([true], 'Field must be checked'),\n\n            // q2: Yup.bool()\n            //     .required(\"Choose one\")\n            //     .oneOf([true], 'Field must be checked'),\n\n            firstName: Yup.string()\n                .max(15, 'Must be 15 characters or less')\n                .required('Required'),\n            lastName: Yup.string()\n                .max(20, 'Must be 20 characters or less')\n                .required('Required'),\n            // email: Yup.string().email('Invalid email address').required('Required'),\n\n        }),\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n\n    let [selectedID, setID] = React.useState('');\n    function Question() {\n        return (\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Question 1: Caring for people who have suffered is an important virtue.</Form.Label>\n                {['Strongly Agree', 'Agree', 'netural', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map((ques) => (\n                    <div key={`${ques}`} className=\"mb-3\">\n                        <Form.Check\n                            type=\"radio\"\n                            id={`${ques}`}\n                            name={`${ques}`}\n                            label={`${ques}`}\n                            checked={ques === selectedID}\n                            onChange={() => {\n                                formik.values.q1 = true;\n                                setID(ques)\n                            }}\n                        />\n                    </div>\n                ))}\n            </Form.Group>\n        )\n    }\n\n    // let\n    return(\n    <Form onSubmit={formik.handleSubmit}>\n        question()\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question 1: Caring for people who have suffered is an important virtue.</Form.Label>\n            {['Strongly Agree', 'Agree','netural','Slightly Disagree','Disagree','Strongly Disagree'].map((ques) => (\n                <div key={`${ques}`} className=\"mb-3\" >\n                    <Form.Check\n                        type=\"radio\"\n                        id={`${ques}`}\n                        name={`${ques}`}\n                        label={`${ques}`}\n                        checked={ques === selectedID}\n                        onChange={() => {\n                            formik.values.q1 = true;\n                            setID(ques)\n                        }}\n                    />\n                </div>\n            ))}\n            {formik.touched.q1 && formik.errors.q1 ? (\n                <div>{formik.errors.q1}</div>\n            ) : null}\n\n        </Form.Group>\n\n\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstName}\n        />\n        {formik.touched.firstName && formik.errors.firstName ? (\n            <div>{formik.errors.firstName}</div>\n        ) : null}\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastName}\n        />\n        {formik.touched.lastName && formik.errors.lastName ? (\n            <div>{formik.errors.lastName}</div>\n        ) : null}\n        {/*<label htmlFor=\"email\">Email Address</label>*/}\n        {/*<input*/}\n        {/*    id=\"email\"*/}\n        {/*    name=\"email\"*/}\n        {/*    type=\"email\"*/}\n        {/*    onChange={formik.handleChange}*/}\n        {/*    onBlur={formik.handleBlur}*/}\n        {/*    value={formik.values.email}*/}\n        {/*/>*/}\n        {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n        ) : null}\n\n        {/*<Button type=\"submit\">Submit</Button>*/}\n        <button type=\"submit\">Submit</button>\n    </Form>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}