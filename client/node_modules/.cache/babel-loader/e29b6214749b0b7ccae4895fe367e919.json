{"ast":null,"code":"var _jsxFileName = \"/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useField, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Questionarie() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      q1: false,\n      q2: false,\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validationSchema: Yup.object({\n      q1: Yup.bool().required(\"Choose one\").oneOf([true], 'Field must be checked'),\n      // q2: Yup.bool()\n      //     .required(\"Choose one\")\n      //     .oneOf([true], 'Field must be checked'),\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required') // email: Yup.string().email('Invalid email address').required('Required'),\n\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n\n  const MyCheckbox = _ref => {\n    _s();\n\n    let {\n      children,\n      ...props\n    } = _ref;\n    const [field, meta] = useField({ ...props,\n      type: \"checkbox\"\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...field,\n          ...props,\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true);\n  };\n\n  _s(MyCheckbox, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n    return [useField];\n  });\n\n  let [selectedID, setID] = React.useState('');\n  const MyRadio = ['Strongly Agree', 'Agree', 'netural', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"radio\",\n        id: `${ques}`,\n        name: `${ques}`,\n        label: `${ques}`,\n        checked: ques === selectedID,\n        onChange: () => {\n          formik.values.q1 = true;\n          setID(ques);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, `${ques}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }); // let\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Question 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"radio\",\n        placeholder: \"Enter email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyRadio, {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), ['Strongly Agree', 'Agree', 'netural', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"radio\",\n        id: `${ques}`,\n        name: `${ques}`,\n        label: `${ques}`,\n        checked: ques === selectedID,\n        onChange: () => {\n          formik.values.q1 = true;\n          setID(ques);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, `${ques}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)), formik.touched.q1 && formik.errors.q1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.q1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this) : null, formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formik.errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Questionarie, \"b9oRTaunY0MdZizm43P39PQ3qis=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Questionarie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionarie\");","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js"],"names":["React","useField","useFormik","Yup","useNavigate","Button","Form","Questionarie","navigate","formik","initialValues","q1","q2","firstName","lastName","email","validationSchema","object","bool","required","oneOf","string","max","onSubmit","values","alert","JSON","stringify","MyCheckbox","children","props","field","meta","type","touched","error","selectedID","setID","useState","MyRadio","map","ques","handleSubmit","errors","handleChange","handleBlur"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useField, useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useNavigate} from \"react-router\";\nimport {Button, Form} from \"react-bootstrap\";\n\nexport default function Questionarie() {\n    const navigate = useNavigate();\n\n\n    const formik = useFormik({\n        initialValues: {\n            q1:false,\n            q2:false,\n            firstName: '',\n            lastName: '',\n            email: '',\n        },\n        validationSchema: Yup.object({\n            q1: Yup.bool()\n                .required(\"Choose one\")\n                .oneOf([true], 'Field must be checked'),\n\n            // q2: Yup.bool()\n            //     .required(\"Choose one\")\n            //     .oneOf([true], 'Field must be checked'),\n\n            firstName: Yup.string()\n                .max(15, 'Must be 15 characters or less')\n                .required('Required'),\n            lastName: Yup.string()\n                .max(20, 'Must be 20 characters or less')\n                .required('Required'),\n            // email: Yup.string().email('Invalid email address').required('Required'),\n\n        }),\n        onSubmit: values => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    const MyCheckbox = ({ children, ...props }) => {\n        const [field, meta] = useField({ ...props, type: \"checkbox\" });\n        return (\n            <>\n                <label className=\"checkbox\">\n                    <input {...field} {...props} type=\"checkbox\" />\n                    {children}\n                </label>\n                {meta.touched && meta.error ? (\n                    <div className=\"error\">{meta.error}</div>\n                ) : null}\n            </>\n        );\n    };\n\n    let [selectedID, setID] = React.useState('');\n\n    const MyRadio = ['Strongly Agree', 'Agree','netural','Slightly Disagree','Disagree','Strongly Disagree'].map((ques) =>{\n        return (\n            <div key={`${ques}`} className=\"mb-3\" >\n                <Form.Check\n                    type=\"radio\"\n                    id={`${ques}`}\n                    name={`${ques}`}\n                    label={`${ques}`}\n                    checked={ques === selectedID}\n                    onChange={() => {\n                        formik.values.q1 = true;\n                        setID(ques)\n                    }}\n                />\n            </div>\n        )\n    })\n\n    // let\n    return(\n    <Form onSubmit={formik.handleSubmit}>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Question 1</Form.Label>\n            <Form.Control type=\"radio\" placeholder=\"Enter email\" />\n            <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n\n        <MyRadio>\n            test\n        </MyRadio>\n\n\n        {['Strongly Agree', 'Agree','netural','Slightly Disagree','Disagree','Strongly Disagree'].map((ques) => (\n            <div key={`${ques}`} className=\"mb-3\" >\n                <Form.Check\n                    type=\"radio\"\n                    id={`${ques}`}\n                    name={`${ques}`}\n                    label={`${ques}`}\n                    checked={ques === selectedID}\n                    onChange={() => {\n                        formik.values.q1 = true;\n                        setID(ques)\n                    }}\n                />\n            </div>\n        ))}\n        {formik.touched.q1 && formik.errors.q1 ? (\n            <div>{formik.errors.q1}</div>\n        ) : null}\n\n        {/*<Form.Group className=\"mb-3\">*/}\n        {/*    <Form.Check*/}\n        {/*        required*/}\n        {/*        name=\"terms\"*/}\n        {/*        label=\"Agree to terms and conditions\"*/}\n        {/*        onChange={formik.handleChange}*/}\n        {/*        // isInvalid={!!errors.terms}*/}\n        {/*        // feedback={errors.terms}*/}\n        {/*        feedbackType=\"invalid\"*/}\n        {/*        id=\"validationFormik0\"*/}\n        {/*    />*/}\n        {/*</Form.Group>*/}\n\n\n\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstName}\n        />\n        {formik.touched.firstName && formik.errors.firstName ? (\n            <div>{formik.errors.firstName}</div>\n        ) : null}\n\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastName}\n        />\n        {formik.touched.lastName && formik.errors.lastName ? (\n            <div>{formik.errors.lastName}</div>\n        ) : null}\n        {/*<label htmlFor=\"email\">Email Address</label>*/}\n        {/*<input*/}\n        {/*    id=\"email\"*/}\n        {/*    name=\"email\"*/}\n        {/*    type=\"email\"*/}\n        {/*    onChange={formik.handleChange}*/}\n        {/*    onBlur={formik.handleBlur}*/}\n        {/*    value={formik.values.email}*/}\n        {/*/>*/}\n        {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n        ) : null}\n\n        {/*<Button type=\"submit\">Submit</Button>*/}\n        <button type=\"submit\">Submit</button>\n    </Form>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}