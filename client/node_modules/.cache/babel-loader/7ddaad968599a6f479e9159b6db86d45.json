{"ast":null,"code":"import _defineProperty from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import{Formik,useField,useFormik}from'formik';import*as Yup from'yup';import{useNavigate}from\"react-router\";import{Badge,Button,Col,Container,Form,FormControl,Row,Stack}from\"react-bootstrap\";import'../question.css';import{string}from\"yup\";import{forEach}from\"react-bootstrap/ElementChildren\";import{nanoid}from'nanoid';import{NavLink}from\"react-router-dom\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Questionnaire(){// const navigate = useNavigate();\nvar _React$useState=React.useState(Date.now()),_React$useState2=_slicedToArray(_React$useState,2),entryTime=_React$useState2[0],setEntryTime=_React$useState2[1];var navigate=useNavigate();var _useState=useState({time:0,ip:\"\",qMap:new Map()}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var formik=useFormik({initialValues:{// q1:false,\n// q2:false,\nquestion0:{name:' ',ans:' '},question1:{name:' ',ans:' '},question2:{name:' ',ans:' '},question3:{name:' ',ans:' '},question4:{name:' ',ans:' '},question5:{name:' ',ans:' '},question6:{name:' ',ans:' '},question7:{name:' ',ans:' '},question8:{name:' ',ans:' '},question9:{name:' ',ans:' '}// sq0:'',\n// sq1:'',\n// sq2:'',\n// sq3:'',\n// sq4:'',\n// sq5:'',\n// sq6:'',\n// sq7:'',\n// sq8:'',\n// sq9:'',\n// firstName: '',\n// lastName: '',\n// email: '',\n},validationSchema:Yup.object({// q1: Yup.bool()\n//     .required(\"1Choose one\")\n//     .oneOf([true], 'Field 1 must be checked'),\n//\n// q2: Yup.bool()\n//     .required(\"2Choose one\")\n//     .oneOf([true], 'Field 2 must be checked'),\nquestion0:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3,\"Q1sss\").required(\"Q1 unchecked\")}).required(\"Q1xxx\"),question1:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q2 unchecked\")}),question2:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q3 unchecked\")}),question3:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q4 unchecked\")}),question4:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q5 unchecked\")}),question5:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q6 unchecked\")}),question6:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q7 unchecked\")}),question7:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q8 unchecked\")}),question8:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q9 unchecked\")}),question9:Yup.object({name:Yup.string().required(\"xxx\"),ans:Yup.string().min(3).required(\"Q10 unchecked\")})// question1: Yup.object().shape({\n//     ans: string().required(\"Q2 unchecked\"),\n// })\n// sq0: Yup.string()\n//     .required(\"Q1 unchecked\"),\n//\n// sq1: Yup.string()\n//     .required(\"Q2 unchecked\"),\n//\n// sq2: Yup.string()\n//     .required(\"Q3 unchecked\"),\n//\n// sq3: Yup.string()\n//     .required(\"Q4 unchecked\"),\n//\n// sq4: Yup.string()\n//     .required(\"Q5 unchecked\"),\n//\n// sq5: Yup.string()\n//     .required(\"Q6 unchecked\"),\n// sq6: Yup.string()\n//     .required(\"Q7 unchecked\"),\n// sq7: Yup.string()\n//     .required(\"Q8 unchecked\"),\n// sq8: Yup.string()\n//     .required(\"Q9 unchecked\"),\n// sq9: Yup.string()\n//     .required(\"Q10 unchecked\"),\n// firstName: Yup.string()\n//     .max(15, 'Must be 15 characters or less')\n//     .required('Required'),\n// lastName: Yup.string()\n//     .max(20, 'Must be 20 characters or less')\n//     .required('Required'),\n// email: Yup.string().email('Invalid email address').required('Required'),\n}),onSubmit:function(){var _onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var endTime,millis,temMap,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:endTime=Date.now();// console.log(\"end time!!!\" + endTime)\n// console.log(\"entry time!!!\" + entryTime)\nmillis=Date.now()-entryTime;// console.log(\"total time!!!\" + millis)\n// const newAnswer = {...form};\ntemMap=new Map();for(i=0;i<10;i++){temMap.set(values[\"question\"+i].name,values[\"question\"+i].ans);console.log(temMap.get(values[\"question\"+i].name));formik.touched[\"question\"+i]=false;}temMap.set(\"id\",nanoid(11));temMap.set(\"time\",millis/1000);setForm({time:millis,ip:\"8.8.8.8\",qMap:temMap});Object.keys(formik.initialValues).forEach(function(key){formik.initialValues[key].ans=\" \";formik.initialValues[key].name=\" \";});_context.next=10;return fetch(\"http://localhost:5001/question/add\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(Object.fromEntries(temMap))}).catch(function(error){window.alert(error);return;});case 10:// console.log(\"form: \"+form.toString())\nalert(\"Thank you, we have received your answer!\");alert(JSON.stringify(Object.fromEntries(temMap),null,2));//\n// alert(JSON.stringify(form, null, 2));//得不到\n// [formik.initialValues].forEach(item =>{\n//     item.name = ' '\n//     item.ans = ' '\n// })\n// formik.initialValues.question0.name=' ';\n// formik.initialValues.question0.ans=' ';\n// formik.initialValues.question1.name=' ';\n// formik.initialValues.question1.ans=' ';\n// formik.initialValues.question2.name=' ';\n// formik.initialValues.question2.ans=' ';\n// formik.initialValues.question3.name=' ';\n// formik.initialValues.question3.ans=' ';\n// formik.initialValues.question9.name=' ';\n// formik.initialValues.question9.ans=' ';\n// formik.initialValues.sq0 = '';\n// formik.initialValues.sq1 = '';\n// formik.initialValues.sq2 = '';\n// formik.initialValues.sq3 = '';\n// formik.initialValues.sq4 = '';\n// formik.initialValues.sq5 = '';\n// formik.initialValues.sq6 = '';\n// formik.initialValues.sq7 = '';\n// formik.initialValues.sq8 = '';\n// formik.initialValues.sq9 = '';\nsetFuns.forEach(function(func){func('');});navigate(\"/\");case 14:case\"end\":return _context.stop();}}},_callee);}));function onSubmit(_x){return _onSubmit.apply(this,arguments);}return onSubmit;}()});// let [selectedID, setID] = React.useState({\n//     p1:\"\",\n//     p2:\"\",\n//     p3:\"\",\n//     p4:\"\",\n//     p5:\"\",\n// });\nvar _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),selectedID0=_React$useState4[0],setID0=_React$useState4[1];var _React$useState5=React.useState(\"\"),_React$useState6=_slicedToArray(_React$useState5,2),selectedID1=_React$useState6[0],setID1=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),selectedID2=_React$useState8[0],setID2=_React$useState8[1];var _React$useState9=React.useState(\"\"),_React$useState10=_slicedToArray(_React$useState9,2),selectedID3=_React$useState10[0],setID3=_React$useState10[1];var _React$useState11=React.useState(\"\"),_React$useState12=_slicedToArray(_React$useState11,2),selectedID4=_React$useState12[0],setID4=_React$useState12[1];var _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),selectedID5=_React$useState14[0],setID5=_React$useState14[1];var _React$useState15=React.useState(\"\"),_React$useState16=_slicedToArray(_React$useState15,2),selectedID6=_React$useState16[0],setID6=_React$useState16[1];var _React$useState17=React.useState(\"\"),_React$useState18=_slicedToArray(_React$useState17,2),selectedID7=_React$useState18[0],setID7=_React$useState18[1];var _React$useState19=React.useState(\"\"),_React$useState20=_slicedToArray(_React$useState19,2),selectedID8=_React$useState20[0],setID8=_React$useState20[1];var _React$useState21=React.useState(\"\"),_React$useState22=_slicedToArray(_React$useState21,2),selectedID9=_React$useState22[0],setID9=_React$useState22[1];var setFuns=[setID0,setID1,setID2,setID3,setID4,setID5,setID6,setID7,setID8,setID9];var selectedIDs=[selectedID0,selectedID1,selectedID2,selectedID3,selectedID4,selectedID5,selectedID6,selectedID7,selectedID8,selectedID9];function Question(props){// let anss = formik.values[[\"question\"+props.qId]].ans;\n// console.log(\"anss!!:\"+anss+\", index, \"+props.qId+\", length:\"+formik.values[[\"question\"+props.qId]].ans.length)\nreturn/*#__PURE__*/_jsxs(Form.Group,{controlId:\"formBasicEmail\",children:[/*#__PURE__*/_jsxs(Form.Label,{className:\"qTitle\",children:[\"Q\",props.qId+1,\": \",props.descri,formik.values[\"question\"+props.qId].ans<3&&formik.touched[\"question\"+props.qId]?/*#__PURE__*/_jsxs(Badge,{pill:true,bg:\"danger\",children:[\"Q\",props.qId+1,\" unchecked\"]}):null]}),/*#__PURE__*/_jsx(Container,{className:\"qCard\",children:/*#__PURE__*/_jsx(Row,{sm:4,md:4,children:['Strongly Agree','Agree','Slightly Agree','Neutral','Slightly Disagree','Disagree','Strongly Disagree'].map(function(ques){return/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"\".concat(ques,\"+\").concat(props.qId),name:\"\".concat(ques,\"+\").concat(props.qId)// label={`${ques}+${props.qId === 1? selectedID1:selectedID2}`}\n// label={`${ques}+${props.selectAns}`}\n// checked={ques+props.qId === props.selectAns}\n// checked={ques+props.qId === (props.qId === 1? selectedID1:selectedID2)}\n,label:\"\".concat(ques)//+${props.selectId}\n,checked:ques+props.qId===props.selectId,onChange:function onChange(){// formik.values[\"sq\"+props.qId]= ques;\nformik.values[\"question\"+props.qId].name=props.qName;//+props.qId\nformik.values[\"question\"+props.qId].ans=ques;setFuns[props.qId](ques+props.qId);// switch (props.qId){\n//     case 1:\n//         console.log(\"case1\")\n//         setID1(ques+props.qId)\n//         break\n//     case 2:\n//         console.log(\"case2\")\n//         setID2(ques+props.qId)\n//         break\n//     case 3:\n//         console.log(\"case3\")\n//         setID3(ques+props.qId)\n//         break\n// }\n// if (props.qId===1){\n//     setID1(ques+props.qId)\n//     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID1:\"+selectedID1)\n//\n// }else{\n//     setID2(ques+props.qId)\n//     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID2:\"+selectedID2)\n// }\n// setID(ques+props.qId)\n// console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID:\"+selectedID)\n}// onChange={formik.handleChange}\n// onBlur={formik.handleBlur}\n// value={formik.values[\"q\"+props.qId]}\n})},\"\".concat(ques,\"+\").concat(props.qId));})})})]});}var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var firstLoad=true;// This method fetches the records from the database.\nuseEffect(function(){if(!firstLoad){return;}setEntryTime(Date.now());// console.log(\"entryTime:\"+entryTime)\n// currentTime = Date.now();\n// console.log(\"time!!!\"+currentTime)\nfirstLoad=false;function getQuestions(){return _getQuestions.apply(this,arguments);}function _getQuestions(){_getQuestions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,message,records;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:5001/questionlist/\");case 2:response=_context2.sent;if(response.ok){_context2.next=7;break;}message=\"An error occured: \".concat(response.statusText);window.alert(message);return _context2.abrupt(\"return\");case 7:_context2.next=9;return response.json();case 9:records=_context2.sent;shuffleArray(records);setQuestions(records.slice(0,10));case 12:case\"end\":return _context2.stop();}}},_callee2);}));return _getQuestions.apply(this,arguments);}getQuestions();return;},[questions.length]);function shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}}function questionList(){return questions.map(function(question,index){// console.log(\"question!!!: \" + question.questiontext)\n// console.log(\"index!!!: \" + index)\nreturn/*#__PURE__*/_jsx(Question,{descri:question.questiontext,qId:index,qName:question.varname,selectId:selectedIDs[index++]// deleteRecord={() => deleteRecord(record._id)}\n// key={record._id}\n},question._id);});}// let\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:\"btnBack\",variant:\"outline-success\",onClick:function onClick(){return navigate(\"/\");},children:\" Back Home\"}),/*#__PURE__*/_jsx(Form,{className:\"col-sm-12 col-md-12 mx-2\",onSubmit:formik.handleSubmit,children:/*#__PURE__*/_jsxs(Stack,{gap:2,children:[questionList(),/*#__PURE__*/_jsx(Container,{children:[0,1,2,3,4,5,6,7,8,9].map(function(index){var _jsxs2;return formik.values[\"question\"+index].ans<3&&formik.touched[\"question\"+index]?/*#__PURE__*/_jsxs(Badge,(_jsxs2={pill:true,className:\"col mx-1 \"},_defineProperty(_jsxs2,\"pill\",true),_defineProperty(_jsxs2,\"bg\",\"danger\"),_defineProperty(_jsxs2,\"children\",[\"Q\",index+1,\" unchecked\"]),_jsxs2),index+1):null;})}),/*#__PURE__*/_jsx(Button,{variant:\"outline-success\",className:\"col-4 mx-auto my-4 \",type:\"submit\",children:\"Submit\"})]})})]});}","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js"],"names":["React","useEffect","useState","Formik","useField","useFormik","Yup","useNavigate","Badge","Button","Col","Container","Form","FormControl","Row","Stack","string","forEach","nanoid","NavLink","Questionnaire","Date","now","entryTime","setEntryTime","navigate","time","ip","qMap","Map","form","setForm","formik","initialValues","question0","name","ans","question1","question2","question3","question4","question5","question6","question7","question8","question9","validationSchema","object","required","min","onSubmit","values","endTime","millis","temMap","i","set","console","log","get","touched","Object","keys","key","fetch","method","headers","body","JSON","stringify","fromEntries","catch","error","window","alert","setFuns","func","selectedID0","setID0","selectedID1","setID1","selectedID2","setID2","selectedID3","setID3","selectedID4","setID4","selectedID5","setID5","selectedID6","setID6","selectedID7","setID7","selectedID8","setID8","selectedID9","setID9","selectedIDs","Question","props","qId","descri","map","ques","selectId","qName","questions","setQuestions","firstLoad","getQuestions","response","ok","message","statusText","json","records","shuffleArray","slice","length","array","j","Math","floor","random","temp","questionList","question","index","questiontext","varname","_id","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Formik, useField, useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useNavigate} from \"react-router\";\nimport {Badge, Button, Col, Container, Form, FormControl, Row, Stack} from \"react-bootstrap\";\nimport '../question.css';\nimport {string} from \"yup\";\nimport {forEach} from \"react-bootstrap/ElementChildren\";\nimport { nanoid } from 'nanoid'\nimport {NavLink} from \"react-router-dom\";\n\nexport default function Questionnaire() {\n    // const navigate = useNavigate();\n    const [entryTime, setEntryTime] = React.useState(Date.now());\n    const navigate = useNavigate();\n    const [form, setForm] = useState({\n        time: 0,\n        ip: \"\",\n        qMap:new Map,\n    });\n\n\n    const formik = useFormik({\n        initialValues: {\n            // q1:false,\n            // q2:false,\n            question0:{\n                name:' ',\n                ans:' '\n            },\n            question1:{\n                name:' ',\n                ans:' '\n            },\n            question2:{\n                name:' ',\n                ans:' '\n            },\n            question3:{\n                name:' ',\n                ans:' '\n            },\n            question4:{\n                name:' ',\n                ans:' '\n            },\n            question5:{\n                name:' ',\n                ans:' '\n            },\n            question6:{\n                name:' ',\n                ans:' '\n            },\n            question7:{\n                name:' ',\n                ans:' '\n            },\n            question8:{\n                name:' ',\n                ans:' '\n            },\n            question9:{\n                name:' ',\n                ans:' '\n            },\n\n            // sq0:'',\n            // sq1:'',\n            // sq2:'',\n            // sq3:'',\n            // sq4:'',\n            // sq5:'',\n            // sq6:'',\n            // sq7:'',\n            // sq8:'',\n            // sq9:'',\n            // firstName: '',\n            // lastName: '',\n            // email: '',\n        },\n        validationSchema: Yup.object({\n            // q1: Yup.bool()\n            //     .required(\"1Choose one\")\n            //     .oneOf([true], 'Field 1 must be checked'),\n            //\n            // q2: Yup.bool()\n            //     .required(\"2Choose one\")\n            //     .oneOf([true], 'Field 2 must be checked'),\n\n            question0: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3,\"Q1sss\").required(\"Q1 unchecked\"),\n            }).required(\"Q1xxx\"),\n\n            question1: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q2 unchecked\"),\n            }),\n            question2: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q3 unchecked\"),\n            }),\n            question3: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q4 unchecked\"),\n            }),\n            question4: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q5 unchecked\"),\n            }),\n            question5: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q6 unchecked\"),\n            }),\n            question6: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q7 unchecked\"),\n            }),\n            question7: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q8 unchecked\"),\n            }),\n            question8: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q9 unchecked\"),\n            }),\n            question9: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q10 unchecked\"),\n            }),\n\n            // question1: Yup.object().shape({\n            //     ans: string().required(\"Q2 unchecked\"),\n            // })\n\n            // sq0: Yup.string()\n            //     .required(\"Q1 unchecked\"),\n            //\n            // sq1: Yup.string()\n            //     .required(\"Q2 unchecked\"),\n            //\n            // sq2: Yup.string()\n            //     .required(\"Q3 unchecked\"),\n            //\n            // sq3: Yup.string()\n            //     .required(\"Q4 unchecked\"),\n            //\n            // sq4: Yup.string()\n            //     .required(\"Q5 unchecked\"),\n            //\n            // sq5: Yup.string()\n            //     .required(\"Q6 unchecked\"),\n            // sq6: Yup.string()\n            //     .required(\"Q7 unchecked\"),\n            // sq7: Yup.string()\n            //     .required(\"Q8 unchecked\"),\n            // sq8: Yup.string()\n            //     .required(\"Q9 unchecked\"),\n            // sq9: Yup.string()\n            //     .required(\"Q10 unchecked\"),\n\n            // firstName: Yup.string()\n            //     .max(15, 'Must be 15 characters or less')\n            //     .required('Required'),\n            // lastName: Yup.string()\n            //     .max(20, 'Must be 20 characters or less')\n            //     .required('Required'),\n            // email: Yup.string().email('Invalid email address').required('Required'),\n\n        }),\n\n        onSubmit: async values => {\n            let endTime = Date.now();\n            // console.log(\"end time!!!\" + endTime)\n            // console.log(\"entry time!!!\" + entryTime)\n            let millis = Date.now() - entryTime\n            // console.log(\"total time!!!\" + millis)\n\n            // const newAnswer = {...form};\n\n            let temMap = new Map(\n                // [\"q1\",values.sq0],\n            )\n            for (let i =0; i<10; i++){\n                temMap.set(values[\"question\"+i].name,values[\"question\"+i].ans)\n                console.log(temMap.get(values[\"question\"+i].name))\n                formik.touched[\"question\"+i]= false;\n            }\n            temMap.set(\"id\",nanoid(11))\n            temMap.set(\"time\",millis/1000)\n\n            setForm({time:millis,ip:\"8.8.8.8\", qMap:temMap});\n\n\n            Object.keys(formik.initialValues).forEach(\n                function(key){\n                    formik.initialValues[key].ans = \" \"\n                    formik.initialValues[key].name = \" \"\n                }\n            );\n\n            await fetch(\"http://localhost:5001/question/add\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(Object.fromEntries(temMap)),\n            })\n                .catch(error => {\n                    window.alert(error);\n                    return;\n                });\n\n\n            // console.log(\"form: \"+form.toString())\n            alert(\"Thank you, we have received your answer!\")\n            alert(JSON.stringify(Object.fromEntries(temMap), null, 2));//\n\n\n            // alert(JSON.stringify(form, null, 2));//得不到\n\n            // [formik.initialValues].forEach(item =>{\n            //     item.name = ' '\n            //     item.ans = ' '\n            // })\n            // formik.initialValues.question0.name=' ';\n            // formik.initialValues.question0.ans=' ';\n            // formik.initialValues.question1.name=' ';\n            // formik.initialValues.question1.ans=' ';\n            // formik.initialValues.question2.name=' ';\n            // formik.initialValues.question2.ans=' ';\n            // formik.initialValues.question3.name=' ';\n            // formik.initialValues.question3.ans=' ';\n            // formik.initialValues.question9.name=' ';\n            // formik.initialValues.question9.ans=' ';\n\n            // formik.initialValues.sq0 = '';\n            // formik.initialValues.sq1 = '';\n            // formik.initialValues.sq2 = '';\n            // formik.initialValues.sq3 = '';\n            // formik.initialValues.sq4 = '';\n            // formik.initialValues.sq5 = '';\n            // formik.initialValues.sq6 = '';\n            // formik.initialValues.sq7 = '';\n            // formik.initialValues.sq8 = '';\n            // formik.initialValues.sq9 = '';\n            setFuns.forEach(func => {\n                func('')\n            })\n            navigate(\"/\")\n        },\n    });\n\n\n    // let [selectedID, setID] = React.useState({\n    //     p1:\"\",\n    //     p2:\"\",\n    //     p3:\"\",\n    //     p4:\"\",\n    //     p5:\"\",\n    // });\n\n    let [selectedID0, setID0] = React.useState(\"\");\n    let [selectedID1, setID1] = React.useState(\"\");\n    let [selectedID2, setID2] = React.useState(\"\");\n    let [selectedID3, setID3] = React.useState(\"\");\n    let [selectedID4, setID4] = React.useState(\"\");\n    let [selectedID5, setID5] = React.useState(\"\");\n    let [selectedID6, setID6] = React.useState(\"\");\n    let [selectedID7, setID7] = React.useState(\"\");\n    let [selectedID8, setID8] = React.useState(\"\");\n    let [selectedID9, setID9] = React.useState(\"\");\n\n    let setFuns = [setID0, setID1, setID2, setID3,setID4,setID5,setID6,setID7,setID8,setID9]\n    let selectedIDs = [selectedID0, selectedID1, selectedID2, selectedID3,selectedID4,selectedID5,selectedID6,selectedID7,selectedID8,selectedID9]\n    function Question(props) {\n        // let anss = formik.values[[\"question\"+props.qId]].ans;\n        // console.log(\"anss!!:\"+anss+\", index, \"+props.qId+\", length:\"+formik.values[[\"question\"+props.qId]].ans.length)\n        return (\n            <Form.Group  controlId=\"formBasicEmail\">\n                <Form.Label className=\"qTitle\" >\n                    Q{props.qId+1}: {props.descri}\n                    { (formik.values[\"question\"+props.qId].ans<3) && formik.touched[\"question\"+props.qId] ? (\n                        <Badge pill bg=\"danger\">\n                            Q{props.qId+1} unchecked\n                            {/*{formik.errors.question0.ans}*/}\n                        </Badge>\n                    ) : null}\n                </Form.Label>\n                {/*<div className=\"qWarning\">*/}\n                {/*    {!formik.values[[\"sq\"+props.qId]] ? (*/}\n                {/*        <Badge pill bg=\"danger\">*/}\n                {/*            {formik.errors[[\"sq\"+props.qId]]}*/}\n                {/*        </Badge>*/}\n                {/*    ) : null}*/}\n                {/*</div>*/}\n\n                <Container className=\"qCard\">\n                    <Row  sm={4} md={4}>\n                {['Strongly Agree','Agree','Slightly Agree' , 'Neutral', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map((ques) => (\n                    <Col key={`${ques}+${props.qId}`} >\n                        <Form.Check\n                            type=\"radio\"\n                            id={`${ques}+${props.qId}`}\n                            name={`${ques}+${props.qId}`}\n                            // label={`${ques}+${props.qId === 1? selectedID1:selectedID2}`}\n                            // label={`${ques}+${props.selectAns}`}\n                            // checked={ques+props.qId === props.selectAns}\n                            // checked={ques+props.qId === (props.qId === 1? selectedID1:selectedID2)}\n                            label={`${ques}`}//+${props.selectId}\n                            checked={ques+props.qId === props.selectId}\n                            onChange={ () => {\n                                // formik.values[\"sq\"+props.qId]= ques;\n\n                                formik.values[\"question\"+props.qId].name = props.qName//+props.qId\n                                formik.values[\"question\"+props.qId].ans = ques\n\n                                setFuns[props.qId](ques+props.qId);\n                                // switch (props.qId){\n                                //     case 1:\n                                //         console.log(\"case1\")\n                                //         setID1(ques+props.qId)\n                                //         break\n                                //     case 2:\n                                //         console.log(\"case2\")\n                                //         setID2(ques+props.qId)\n                                //         break\n                                //     case 3:\n                                //         console.log(\"case3\")\n                                //         setID3(ques+props.qId)\n                                //         break\n                                // }\n                                // if (props.qId===1){\n                                //     setID1(ques+props.qId)\n                                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID1:\"+selectedID1)\n                                //\n                                // }else{\n                                //     setID2(ques+props.qId)\n                                //     console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID2:\"+selectedID2)\n                                // }\n                                // setID(ques+props.qId)\n                                // console.log(\"onChange, ques+props.qId:\"+ques+props.qId+\", selectedID:\"+selectedID)\n                            }}\n                            // onChange={formik.handleChange}\n                            // onBlur={formik.handleBlur}\n                            // value={formik.values[\"q\"+props.qId]}\n                        />\n                    </Col>\n                ))}\n                    </Row>\n                </Container>\n\n                {/*{formik.touched[\"q\"+props.qId] && formik.errors[[\"q\"+props.qId]] ? (*/}\n                {/*    // <div>{formik.errors[[\"q\"+props.qId]]}</div>*/}\n                {/*{!formik.values[[\"sq\"+props.qId]] ? (*/}\n                {/*    <Badge pill bg=\"danger\">*/}\n                {/*        {formik.errors[[\"sq\"+props.qId]]}*/}\n                {/*    </Badge>*/}\n                {/*) : null}*/}\n            </Form.Group>\n\n        )\n    }\n\n    const [questions, setQuestions] = useState([]);\n    let firstLoad = true;\n    // This method fetches the records from the database.\n    useEffect(() => {\n        if(!firstLoad){\n            return;\n        }\n        setEntryTime(Date.now())\n        // console.log(\"entryTime:\"+entryTime)\n\n        // currentTime = Date.now();\n        // console.log(\"time!!!\"+currentTime)\n        firstLoad = false;\n        async function getQuestions() {\n            const response = await fetch(`http://localhost:5001/questionlist/`);\n            if (!response.ok) {\n                const message = `An error occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n\n            const records = await response.json();\n            shuffleArray(records);\n            setQuestions(records.slice(0,10));\n        }\n        getQuestions();\n\n        return;\n    }, [questions.length]);\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n\n    function questionList() {\n        return questions.map((question,index) => {\n            // console.log(\"question!!!: \" + question.questiontext)\n            // console.log(\"index!!!: \" + index)\n            return (\n                <Question\n                    descri={question.questiontext}\n                    key={question._id}\n                    qId={index}\n                    qName={question.varname}\n                    selectId = {selectedIDs[index++]}\n\n                    // deleteRecord={() => deleteRecord(record._id)}\n                    // key={record._id}\n                />\n            );\n        });\n    }\n    // let\n    return(\n        <div>\n   <Button  className=\"btnBack\" variant=\"outline-success\" onClick={()=> navigate(\"/\")}> Back Home</Button>\n    <Form  className=\"col-sm-12 col-md-12 mx-2\" onSubmit={formik.handleSubmit}>\n        {/*<Question descri={questions.questiontext}  qId={1} selectId = {selectedIDs[0]} />*/}\n        {/*<Question descri={\"q1 des\"}  qId={1} selectId = {selectedIDs[0]}  />*/}\n        {/*<Question descri={\"q2 des\"}  qId={2} selectId = {selectedID2} />*/}\n        {/*<Question descri={\"q3 des\"}  qId={3} selectId = {selectedID3} />*/}\n\n        <Stack gap={2}>\n\n            {questionList()}\n            {/*<Button variant=\"secondary\">Save changes</Button>*/}\n            {/*<Button variant=\"outline-secondary\">Cancel</Button>*/}\n\n            <Container >\n                {[0,1,2,3,4,5,6,7,8,9].map((index)=>{\n                        return formik.values[\"question\"+index].ans<3&&formik.touched[\"question\"+index] ? (\n                            <Badge key={index+1} pill className=\"col mx-1 \" pill bg=\"danger\">\n                                Q{index+1} unchecked\n                            </Badge>\n                        ) : null\n                    }\n                )\n                }\n            </Container>\n\n\n\n            <Button variant=\"outline-success\" className=\"col-4 mx-auto my-4 \"  type=\"submit\">Submit</Button>\n\n        </Stack>\n\n    </Form>\n\n            {/*<Button className=\"col-4 mx-auto my-4 \" variant=\"secondary\"  onClick={exportCsv}>Export</Button>*/}\n            {/*<a href=\"http://localhost:5001/csv/\" download=\"answershref.csv\">*/}\n            {/*    Download csv*/}\n            {/*</a>*/}\n        </div>\n\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}