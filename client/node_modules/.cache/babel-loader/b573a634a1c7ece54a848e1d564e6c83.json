{"ast":null,"code":"import _asyncToGenerator from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/yze/WebstormProjects/Mern/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from\"react\";import{useNavigate}from\"react-router\";/**\n serve as a creating component for our records.\n Using this component, users can create a new record.\n This component will submit a create command to our server.\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Create(){//. useState returns a pair: the current state value and a function that lets you update it.\nvar _useState=useState({name:\"\",position:\"\",level:\"\"}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var navigate=useNavigate();// These methods will update the state properties.\nfunction updateForm(value){return setForm(function(prev){return _objectSpread(_objectSpread({},prev),value);});}// This function will handle the submission.\nfunction onSubmit(_x){return _onSubmit.apply(this,arguments);}// This following section will display the form that takes the input from the user.\nfunction _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newPerson;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// When a post request is sent to the create url, we'll add a new record to the database.\nnewPerson=_objectSpread({},form);_context.next=4;return fetch(\"http://localhost:5001/record/add\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newPerson)}).catch(function(error){window.alert(error);return;});case 4:setForm({name:\"\",position:\"\",level:\"\"});navigate(\"/\");case 6:case\"end\":return _context.stop();}}},_callee);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New Record\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"name\",value:form.name,onChange:function onChange(e){return updateForm({name:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"position\",children:\"Position\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",id:\"position\",value:form.position,onChange:function onChange(e){return updateForm({position:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-check-inline\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"positionOptions\",id:\"positionIntern\",value:\"Intern\",checked:form.level===\"Intern\",onChange:function onChange(e){return updateForm({level:e.target.value});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"positionIntern\",className:\"form-check-label\",children:\"Intern\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-check-inline\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"positionOptions\",id:\"positionJunior\",value:\"Junior\",checked:form.level===\"Junior\",onChange:function onChange(e){return updateForm({level:e.target.value});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"positionJunior\",className:\"form-check-label\",children:\"Junior\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-check form-check-inline\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"positionOptions\",id:\"positionSenior\",value:\"Senior\",checked:form.level===\"Senior\",onChange:function onChange(e){return updateForm({level:e.target.value});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"positionSenior\",className:\"form-check-label\",children:\"Senior\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Create person\",className:\"btn btn-primary\"})})]})]});}","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/create.js"],"names":["React","useState","useNavigate","Create","name","position","level","form","setForm","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\n/**\n serve as a creating component for our records.\n Using this component, users can create a new record.\n This component will submit a create command to our server.\n */\nexport default function Create() {\n    //. useState returns a pair: the current state value and a function that lets you update it.\n    const [form, setForm] = useState({\n        name: \"\",\n        position: \"\",\n        level: \"\",\n    });\n    const navigate = useNavigate();\n\n    // These methods will update the state properties.\n    function updateForm(value) {\n        return setForm((prev) => {\n            return { ...prev, ...value };\n        });\n    }\n\n    // This function will handle the submission.\n    async function onSubmit(e) {\n        e.preventDefault();\n\n        // When a post request is sent to the create url, we'll add a new record to the database.\n        const newPerson = { ...form };\n\n        await fetch(\"http://localhost:5001/record/add\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newPerson),\n        })\n            .catch(error => {\n                window.alert(error);\n                return;\n            });\n\n        setForm({ name: \"\", position: \"\", level: \"\" });\n        navigate(\"/\");\n    }\n\n    // This following section will display the form that takes the input from the user.\n    return (\n        <div>\n            <h3>Create New Record</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"name\"\n                        value={form.name}\n                        onChange={(e) => updateForm({ name: e.target.value })}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"position\">Position</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"position\"\n                        value={form.position}\n                        onChange={(e) => updateForm({ position: e.target.value })}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"positionOptions\"\n                            id=\"positionIntern\"\n                            value=\"Intern\"\n                            checked={form.level === \"Intern\"}\n                            onChange={(e) => updateForm({ level: e.target.value })}\n                        />\n                        <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"positionOptions\"\n                            id=\"positionJunior\"\n                            value=\"Junior\"\n                            checked={form.level === \"Junior\"}\n                            onChange={(e) => updateForm({ level: e.target.value })}\n                        />\n                        <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n                    </div>\n                    <div className=\"form-check form-check-inline\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name=\"positionOptions\"\n                            id=\"positionSenior\"\n                            value=\"Senior\"\n                            checked={form.level === \"Senior\"}\n                            onChange={(e) => updateForm({ level: e.target.value })}\n                        />\n                        <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"submit\"\n                        value=\"Create person\"\n                        className=\"btn btn-primary\"\n                    />\n                </div>\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}