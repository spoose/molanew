{"ast":null,"code":"var _jsxFileName = \"/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Formik, useField, useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router\";\nimport { Badge, Button, Col, Container, Form, FormControl, Row, Stack } from \"react-bootstrap\";\nimport '../question.css';\nimport { string } from \"yup\";\nimport { forEach } from \"react-bootstrap/ElementChildren\";\nimport { nanoid } from 'nanoid';\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questionnaire() {\n  _s();\n\n  // const navigate = useNavigate();\n  const [entryTime, setEntryTime] = React.useState(Date.now());\n  const navigate = useNavigate(); // const [form, setForm] = useState({\n  //     time: 0,\n  //     ip: \"\",\n  //     qMap:new Map,\n  // });\n\n  const formik = useFormik({\n    initialValues: {\n      question0: {\n        name: ' ',\n        ans: ' '\n      },\n      question1: {\n        name: ' ',\n        ans: ' '\n      },\n      question2: {\n        name: ' ',\n        ans: ' '\n      },\n      question3: {\n        name: ' ',\n        ans: ' '\n      },\n      question4: {\n        name: ' ',\n        ans: ' '\n      },\n      question5: {\n        name: ' ',\n        ans: ' '\n      },\n      question6: {\n        name: ' ',\n        ans: ' '\n      },\n      question7: {\n        name: ' ',\n        ans: ' '\n      },\n      question8: {\n        name: ' ',\n        ans: ' '\n      },\n      question9: {\n        name: ' ',\n        ans: ' '\n      }\n    },\n    validationSchema: Yup.object({\n      question0: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3, \"Q1sss\").required(\"Q1 unchecked\")\n      }).required(\"Q1xxx\"),\n      question1: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q2 unchecked\")\n      }),\n      question2: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q3 unchecked\")\n      }),\n      question3: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q4 unchecked\")\n      }),\n      question4: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q5 unchecked\")\n      }),\n      question5: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q6 unchecked\")\n      }),\n      question6: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q7 unchecked\")\n      }),\n      question7: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q8 unchecked\")\n      }),\n      question8: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q9 unchecked\")\n      }),\n      question9: Yup.object({\n        name: Yup.string().required(\"xxx\"),\n        ans: Yup.string().min(3).required(\"Q10 unchecked\")\n      })\n    }),\n    onSubmit: async values => {\n      let millis = Date.now() - entryTime;\n      let temMap = new Map();\n\n      for (let i = 0; i < 10; i++) {\n        temMap.set(values[\"question\" + i].name, values[\"question\" + i].ans); //assign value\n        // console.log(temMap.get(values[\"question\"+i].name))\n\n        formik.touched[\"question\" + i] = false; //reset formik values\n      }\n\n      temMap.set(\"id\", nanoid(11));\n      temMap.set(\"time\", millis / 1000); // setForm({time:millis,ip:\"8.8.8.8\", qMap:temMap});\n\n      Object.keys(formik.initialValues).forEach( //reset formik values\n      function (key) {\n        formik.initialValues[key].ans = \" \";\n        formik.initialValues[key].name = \" \";\n      }); //http://localhost:5001\n\n      await fetch(\"/question/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(Object.fromEntries(temMap))\n      }).catch(error => {\n        window.alert(error);\n        return;\n      });\n      alert(\"Thank you, we have received your answer!\");\n      alert(JSON.stringify(Object.fromEntries(temMap), null, 2)); //\n      // alert(JSON.stringify(form, null, 2));\n\n      setFuns.forEach(func => {\n        func('');\n      });\n      navigate(\"/\"); //back to home page after submit\n    }\n  });\n  let [selectedID0, setID0] = React.useState(\"\");\n  let [selectedID1, setID1] = React.useState(\"\");\n  let [selectedID2, setID2] = React.useState(\"\");\n  let [selectedID3, setID3] = React.useState(\"\");\n  let [selectedID4, setID4] = React.useState(\"\");\n  let [selectedID5, setID5] = React.useState(\"\");\n  let [selectedID6, setID6] = React.useState(\"\");\n  let [selectedID7, setID7] = React.useState(\"\");\n  let [selectedID8, setID8] = React.useState(\"\");\n  let [selectedID9, setID9] = React.useState(\"\");\n  let setFuns = [setID0, setID1, setID2, setID3, setID4, setID5, setID6, setID7, setID8, setID9];\n  let selectedIDs = [selectedID0, selectedID1, selectedID2, selectedID3, selectedID4, selectedID5, selectedID6, selectedID7, selectedID8, selectedID9];\n\n  function Question(props) {\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"qTitle\",\n        children: [\"Q\", props.qId + 1, \": \", props.descri, formik.values[\"question\" + props.qId].ans < 3 && formik.touched[\"question\" + props.qId] ? /*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          bg: \"danger\",\n          children: [\"Q\", props.qId + 1, \" unchecked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"qCard\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          sm: 4,\n          md: 4,\n          children: ['Strongly Agree', 'Agree', 'Slightly Agree', 'Neutral', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map(ques => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              id: `${ques}+${props.qId}`,\n              name: `${ques}+${props.qId}`,\n              label: `${ques}` //+${props.selectId}\n              ,\n              checked: ques + props.qId === props.selectId,\n              onChange: () => {\n                // formik.values[\"sq\"+props.qId]= ques;\n                formik.values[\"question\" + props.qId].name = props.qName; //+props.qId\n\n                formik.values[\"question\" + props.qId].ans = ques;\n                setFuns[props.qId](ques + props.qId);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)\n          }, `${ques}+${props.qId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  }\n\n  const [questions, setQuestions] = useState([]);\n  let firstLoad = true; // This method fetches the records from the database.\n\n  useEffect(() => {\n    if (!firstLoad) {\n      return;\n    }\n\n    setEntryTime(Date.now());\n    firstLoad = false;\n\n    async function getQuestions() {\n      const response = await fetch(`/questionlist/`); //http://localhost:5001\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      shuffleArray(records);\n      setQuestions(records.slice(0, 10));\n    }\n\n    getQuestions();\n    return;\n  }, [questions.length]);\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n  }\n\n  function QuestionList() {\n    return questions.map((question, index) => {\n      return /*#__PURE__*/_jsxDEV(Question, {\n        descri: question.questiontext,\n        qId: index,\n        qName: question.varname,\n        selectId: selectedIDs[index++]\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function uncheckedQues(_ref) {\n    let {} = _ref;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(index => {\n        return formik.values[\"question\" + index].ans.length < 3 && formik.touched[\"question\" + index] ? /*#__PURE__*/_jsxDEV(Badge, {\n          pill: true,\n          className: \"col mx-1 \",\n          pill: true,\n          bg: \"danger\",\n          children: [\"Q\", index + 1, \" unchecked\"]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btnBack\",\n      variant: \"outline-success\",\n      onClick: () => navigate(\"/\"),\n      children: \" Back Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"col-sm-12 col-md-12 mx-2\",\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 2,\n        children: [QuestionList(), uncheckedQues({\n          formik\n        }), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          className: \"col-4 mx-auto my-4 \",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Questionnaire, \"A/71mWJgJ7hc0hnwBiW9pEqvsro=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = Questionnaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"sources":["/Users/yze/WebstormProjects/Mern/client/src/components/questionarie.js"],"names":["React","useEffect","useState","Formik","useField","useFormik","Yup","useNavigate","Badge","Button","Col","Container","Form","FormControl","Row","Stack","string","forEach","nanoid","NavLink","Questionnaire","entryTime","setEntryTime","Date","now","navigate","formik","initialValues","question0","name","ans","question1","question2","question3","question4","question5","question6","question7","question8","question9","validationSchema","object","required","min","onSubmit","values","millis","temMap","Map","i","set","touched","Object","keys","key","fetch","method","headers","body","JSON","stringify","fromEntries","catch","error","window","alert","setFuns","func","selectedID0","setID0","selectedID1","setID1","selectedID2","setID2","selectedID3","setID3","selectedID4","setID4","selectedID5","setID5","selectedID6","setID6","selectedID7","setID7","selectedID8","setID8","selectedID9","setID9","selectedIDs","Question","props","qId","descri","map","ques","selectId","qName","questions","setQuestions","firstLoad","getQuestions","response","ok","message","statusText","records","json","shuffleArray","slice","length","array","j","Math","floor","random","temp","QuestionList","question","index","questiontext","varname","_id","uncheckedQues","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Formik, useField, useFormik} from 'formik';\nimport * as Yup from 'yup';\nimport {useNavigate} from \"react-router\";\nimport {Badge, Button, Col, Container, Form, FormControl, Row, Stack} from \"react-bootstrap\";\nimport '../question.css';\nimport {string} from \"yup\";\nimport {forEach} from \"react-bootstrap/ElementChildren\";\nimport { nanoid } from 'nanoid'\nimport {NavLink} from \"react-router-dom\";\n\nexport default function Questionnaire() {\n    // const navigate = useNavigate();\n    const [entryTime, setEntryTime] = React.useState(Date.now());\n    const navigate = useNavigate();\n    // const [form, setForm] = useState({\n    //     time: 0,\n    //     ip: \"\",\n    //     qMap:new Map,\n    // });\n\n    const formik = useFormik({\n        initialValues: {\n            question0:{\n                name:' ',\n                ans:' '\n            },\n            question1:{\n                name:' ',\n                ans:' '\n            },\n            question2:{\n                name:' ',\n                ans:' '\n            },\n            question3:{\n                name:' ',\n                ans:' '\n            },\n            question4:{\n                name:' ',\n                ans:' '\n            },\n            question5:{\n                name:' ',\n                ans:' '\n            },\n            question6:{\n                name:' ',\n                ans:' '\n            },\n            question7:{\n                name:' ',\n                ans:' '\n            },\n            question8:{\n                name:' ',\n                ans:' '\n            },\n            question9:{\n                name:' ',\n                ans:' '\n            },\n        },\n        validationSchema: Yup.object({\n            question0: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3,\"Q1sss\").required(\"Q1 unchecked\"),\n            }).required(\"Q1xxx\"),\n\n            question1: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q2 unchecked\"),\n            }),\n            question2: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q3 unchecked\"),\n            }),\n            question3: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q4 unchecked\"),\n            }),\n            question4: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q5 unchecked\"),\n            }),\n            question5: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q6 unchecked\"),\n            }),\n            question6: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q7 unchecked\"),\n            }),\n            question7: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q8 unchecked\"),\n            }),\n            question8: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q9 unchecked\"),\n            }),\n            question9: Yup.object({\n                name:Yup.string().required(\"xxx\"),\n                ans: Yup.string().min(3).required(\"Q10 unchecked\"),\n            }),\n        }),\n        onSubmit: async values => {\n            let millis = Date.now() - entryTime\n            let temMap = new Map()\n\n            for (let i =0; i<10; i++){\n                temMap.set(values[\"question\"+i].name,values[\"question\"+i].ans)//assign value\n                // console.log(temMap.get(values[\"question\"+i].name))\n                formik.touched[\"question\"+i]= false;//reset formik values\n            }\n            temMap.set(\"id\",nanoid(11))\n            temMap.set(\"time\",millis/1000)\n            // setForm({time:millis,ip:\"8.8.8.8\", qMap:temMap});\n\n            Object.keys(formik.initialValues).forEach(//reset formik values\n                function(key){\n                    formik.initialValues[key].ans = \" \"\n                    formik.initialValues[key].name = \" \"\n                }\n            );\n\n            //http://localhost:5001\n            await fetch(\"/question/add\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(Object.fromEntries(temMap)),\n            })\n                .catch(error => {\n                    window.alert(error);\n                    return;\n                });\n\n            alert(\"Thank you, we have received your answer!\")\n            alert(JSON.stringify(Object.fromEntries(temMap), null, 2));//\n\n            // alert(JSON.stringify(form, null, 2));\n\n            setFuns.forEach(func => {\n                func('')\n            })\n\n            navigate(\"/\")//back to home page after submit\n        },\n    });\n\n    let [selectedID0, setID0] = React.useState(\"\");\n    let [selectedID1, setID1] = React.useState(\"\");\n    let [selectedID2, setID2] = React.useState(\"\");\n    let [selectedID3, setID3] = React.useState(\"\");\n    let [selectedID4, setID4] = React.useState(\"\");\n    let [selectedID5, setID5] = React.useState(\"\");\n    let [selectedID6, setID6] = React.useState(\"\");\n    let [selectedID7, setID7] = React.useState(\"\");\n    let [selectedID8, setID8] = React.useState(\"\");\n    let [selectedID9, setID9] = React.useState(\"\");\n\n    let setFuns = [setID0, setID1, setID2, setID3,setID4,setID5,setID6,setID7,setID8,setID9]\n    let selectedIDs = [selectedID0, selectedID1, selectedID2, selectedID3,selectedID4,selectedID5,selectedID6,selectedID7,selectedID8,selectedID9]\n\n    function Question(props) {\n        return (\n            <Form.Group  controlId=\"formBasicEmail\">\n                <Form.Label className=\"qTitle\" >\n                    Q{props.qId+1}: {props.descri}\n                    { (formik.values[\"question\"+props.qId].ans<3) && formik.touched[\"question\"+props.qId] ? (\n                        <Badge pill bg=\"danger\">\n                            Q{props.qId+1} unchecked\n                            {/*{formik.errors.question0.ans}*/}\n                        </Badge>\n                    ) : null}\n                </Form.Label>\n\n                <Container className=\"qCard\">\n                    <Row  sm={4} md={4}>\n                        {['Strongly Agree','Agree','Slightly Agree' , 'Neutral', 'Slightly Disagree', 'Disagree', 'Strongly Disagree'].map((ques) => (\n                            <Col key={`${ques}+${props.qId}`} >\n                                <Form.Check\n                                    type=\"radio\"\n                                    id={`${ques}+${props.qId}`}\n                                    name={`${ques}+${props.qId}`}\n                                    label={`${ques}`}//+${props.selectId}\n                                    checked={ques+props.qId === props.selectId}\n                                    onChange={ () => {\n                                        // formik.values[\"sq\"+props.qId]= ques;\n                                        formik.values[\"question\"+props.qId].name = props.qName//+props.qId\n                                        formik.values[\"question\"+props.qId].ans = ques\n                                        setFuns[props.qId](ques+props.qId);\n                                    }}\n                                />\n                            </Col>\n                        ))}\n                    </Row>\n                </Container>\n            </Form.Group>\n        )\n    }\n\n    const [questions, setQuestions] = useState([]);\n    let firstLoad = true;\n    // This method fetches the records from the database.\n    useEffect(() => {\n        if(!firstLoad){\n            return;\n        }\n        setEntryTime(Date.now())\n        firstLoad = false;\n        async function getQuestions() {\n            const response = await fetch(`/questionlist/`);//http://localhost:5001\n            if (!response.ok) {\n                const message = `An error occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const records = await response.json();\n            shuffleArray(records);\n            setQuestions(records.slice(0,10));\n        }\n        getQuestions();\n\n        return;\n    }, [questions.length]);\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n    }\n\n    function QuestionList() {\n        return questions.map((question,index) => {\n            return (\n                <Question\n                    descri={question.questiontext}\n                    key={question._id}\n                    qId={index}\n                    qName={question.varname}\n                    selectId = {selectedIDs[index++]}\n                />\n            );\n        });\n    }\n\n    function uncheckedQues({}){\n        return(\n            <Container>\n                {[0,1,2,3,4,5,6,7,8,9].map((index)=>{\n                    return formik.values[\"question\"+index].ans.length < 3 && formik.touched[\"question\"+index] ? (\n                        <Badge key={index+1} pill className=\"col mx-1 \" pill bg=\"danger\">\n                            Q{index+1} unchecked\n                        </Badge>\n                    ) : null\n                })}\n            </Container>\n        )\n    }\n\n    return(\n        <div>\n            <Button  className=\"btnBack\" variant=\"outline-success\" onClick={()=> navigate(\"/\")}> Back Home</Button>\n            <Form  className=\"col-sm-12 col-md-12 mx-2\" onSubmit={formik.handleSubmit}>\n              <Stack gap={2}>\n                  {QuestionList()}\n                  {uncheckedQues({formik})}\n                  <Button variant=\"outline-success\" className=\"col-4 mx-auto my-4 \"  type=\"submit\">Submit</Button>\n            </Stack>\n            </Form>\n        </div>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}